apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: background-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
  name: kyverno:background-controller:temp
rules:
- apiGroups:
  - '*'
  resources:
  - events
  verbs:
  - create
  - update
  - patch
  - delete
  - get
  - list
---
apiVersion: kyverno.io/v2beta1
kind: ClusterPolicy
metadata:
  name: audit-event-on-resource-changes
  annotations:
    policies.kyverno.io/title: Audit Event on Resource Changes
    policies.kyverno.io/category: Other
    kyverno.io/kyverno-version: 1.10.0
    policies.kyverno.io/minversion: 1.10.0
    kyverno.io/kubernetes-version: "1.26"
    policies.kyverno.io/subject: "Any"
    policies.kyverno.io/description: >-
      Kubernetes Events are limited in that the circumstances under which they are created
      cannot be changed and with what they are associated is fixed. It may be advantageous
      in many cases to augment these out-of-the-box Events with custom Events which can be
      custom designed to your needs. This policy generates an Event when any object has been
      created, updated, deleted, or accessed. It lists the userInfo of the actor performing the action.
      
spec:
  background: false
  rules:
  - name: generate-event-on-resource-change
    match:
      any:
      - resources:
          kinds:
          - Deployment
          - Secret
          - ConfigMap
          - Service
          - ScaledObject
          - Pod
          operations:
          - CREATE
          - UPDATE
          - DELETE
          # - GET
          # - LIST
          # - WATCH
          # - PATCH
          - CONNECT
    generate:
      apiVersion: v1
      kind: Event
      name: "change.{{`{{ random('[a-z0-9]{12}') }}`}}"
      namespace: "{{`{{request.object.metadata.namespace}}`}}"
      synchronize: false
      data:
        firstTimestamp: "{{`{{ time_now_utc() }}`}}"
        involvedObject:
          apiVersion: "{{`{{ request.kind.version }}`}}"
          kind: "{{`{{ request.kind.kind }}`}}"
          name: "{{`{{ request.name }}`}}"
          namespace: "{{`{{ request.namespace }}`}}"
          uid: "{{`{{request.object.metadata.uid}}`}}"
        lastTimestamp: "{{`{{ time_now_utc() }}`}}"
        message: "The '{{`{{ request.name }}`}}' {{`{{ request.kind.kind }}`}} was {{`{{ request.operation | lower }}`}} by {{`{{ request.userInfo | to_string(@) }}`}}."
        reason: "Object {{`{{ request.operation }}`}}"
        source:
          component: kyverno
        type: Warning
